service: photosintese

plugins:
  - serverless-domain-manager
  - serverless-offline
  - serverless-prune-plugin

provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}}

custom:
  defaultStage: dev
  domainName:
    dev: dev-api.photosintese.com.br
    prod: origin-api.photosintese.com.br
  customDomain:
    domainName: ${self:custom.domainName.${opt:stage, self:provider.stage}}
    certificateArn: arn:aws:acm:us-east-1:372063505513:certificate/34d27ddc-07a4-46c7-8541-d5ca2d16a8a6
    basePath: ''
    stage: ${opt:stage, self:provider.stage}
    createRoute53Record: true
    endpointType: regional
  databaseIdentifier: ${self:service}-database-${self:provider.stage}
  databaseName: ${self:service}${self:provider.stage}
  databasePassword:
    dev: ${ssm:/Dev/Photosintese/RDS}
    prod: ${ssm:/Prod/Photosintese/RDS}  
  profiles:
    dev: fumes
    prod: fumes

functions:
  user:
    handler: src/interfaces/user.handler
    environment:
      databaseHost: ${self:service}-database-${self:provider.stage}.cod3dnncgp7e.${self:provider.region}.rds.amazonaws.com
      databaseUser: root
      databasePassword: ${self:custom.databasePassword.${self:provider.stage}}
      databaseDb: ${self:custom.databaseName}
    events:
      - http:
          path: user/create
          method: post
      # - http:
      #     path: user/update
      #     method: put
      # - http:
      #     path: user/delete
      #     method: delete

resources:
  Resources:
    Database:
      Type: AWS::RDS::DBInstance
      Properties:
        AllocatedStorage: 100
        AutoMinorVersionUpgrade: true
        AvailabilityZone: ${self:provider.region}a
        DBInstanceClass: db.t2.micro
        DBInstanceIdentifier: ${self:custom.databaseIdentifier}
        DBName: ${self:custom.databaseName}
        Engine: mariadb
        EngineVersion: 10.1.34
        MasterUsername: "root"
        MasterUserPassword: ${self:custom.databasePassword.${self:provider.stage}}
        PubliclyAccessible: true

    